import React, { useEffect, useRef, useState } from "react";
import {
  motion,
  useAnimationFrame,
  useMotionValue,
  useScroll,
  useSpring,
  useTransform,
  useVelocity,
} from "framer-motion";

// Tech Stack Icons Components
const TechIcons = {
  html: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#E34F26">
      <path d="M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z"/>
    </svg>
  ),
  css: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#1572B6">
      <path d="M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.751L12 19.351l5.379-1.443.744-8.157z"/>
    </svg>
  ),
  javascript: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12">
      <rect width="24" height="24" fill="#F7DF1E"/>
      <path d="M22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z" fill="#323330"/>
    </svg>
  ),
  react: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12">
      <g stroke="#61DAFB" strokeWidth="1" fill="none">
        <circle cx="12" cy="12" r="2.05" fill="#61DAFB"/>
        <ellipse cx="12" cy="12" rx="11" ry="4.2"/>
        <ellipse cx="12" cy="12" rx="11" ry="4.2" transform="rotate(60 12 12)"/>
        <ellipse cx="12" cy="12" rx="11" ry="4.2" transform="rotate(120 12 12)"/>
      </g>
    </svg>
  ),
  nodejs: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#339933">
      <path d="M11.998 24c-.321 0-.641-.084-.922-.247l-2.936-1.737c-.438-.245-.224-.332-.08-.383.585-.203.703-.25 1.328-.602.065-.037.151-.023.218.017l2.256 1.339c.082.045.198.045.275 0l8.795-5.076c.082-.047.135-.141.135-.241V6.921c0-.103-.055-.198-.137-.246l-8.791-5.072c-.081-.047-.189-.047-.273 0L2.075 6.675c-.084.048-.139.144-.139.246v10.146c0 .1.055.194.139.241l2.409 1.392c1.307.654 2.108-.116 2.108-.89V7.787c0-.142.114-.253.256-.253h1.115c.139 0 .255.112.255.253v10.021c0 1.745-.95 2.745-2.604 2.745-.508 0-.909 0-2.026-.551L1.352 18.675C.533 18.215 0 17.352 0 16.43V6.284c0-.922.533-1.786 1.352-2.245L10.147-.963c.8-.452 1.866-.452 2.657 0l8.796 5.002c.819.459 1.352 1.323 1.352 2.245v10.146c0 .922-.533 1.783-1.352 2.245l-8.796 5.078c-.28.163-.601.247-.926.247z"/>
    </svg>
  ),
  python: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12">
      <path fill="#3776ab" d="M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.18l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09zm13.09 3.95l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08z"/>
    </svg>
  ),
  java: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#007396">
      <path d="M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.093.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.001.07-.062.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639"/>
    </svg>
  ),
  bootstrap: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#7952B3">
      <path d="M11.77 11.24H9.956V8.202h2.152c1.17 0 1.834.522 1.834 1.466 0 1.008-.773 1.572-2.174 1.572zm.324 1.206H9.956v3.348h2.231c1.459 0 2.232-.585 2.232-1.685s-.795-1.663-2.123-1.663zM24 12v12H0V0h24v12zM6.5 3.75v16.5h5.041c2.896 0 4.668-1.621 4.668-4.126 0-1.748-.863-2.917-2.415-3.251v-.085c1.17-.323 1.813-1.338 1.813-2.494 0-2.155-1.478-3.544-3.796-3.544H6.5z"/>
    </svg>
  ),
  mongodb: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#47A248">
      <path d="M17.193 9.555c-1.264-5.58-4.252-7.414-4.573-8.115-.28-.394-.53-.954-.735-1.44-.036.495-.055.685-.523 1.184C10.8 2.218 8.224 4.05 7.17 9.555c-.954 4.98.846 9.235 3.994 11.287 1.128.728 2.167.886 2.167.886s1.039-.158 2.167-.886c3.148-2.052 4.948-6.307 3.994-11.287z"/>
    </svg>
  ),
  mysql: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#4479A1">
      <path d="M16.405 5.501c-.115 0-.193.014-.274.033v.013h.014c.054.104.146.18.214.273.054.107.1.214.154.32l.014-.015c.094-.066.14-.172.14-.333-.04-.047-.046-.094-.08-.134-.04-.053-.094-.08-.14-.106-.013-.013-.014-.027-.027-.027zm-3.17 2.697c-.107 0-.18.047-.274.067v.23c.173.103.372.04.507.067 0-.1 0-.2-.24-.334-.053-.066-.146-.047-.22-.047-.013 0-.027.014-.04.017zm7.649-10.65c-.014.013-.027.04-.04.054-.047.066-.1.12-.16.174a.036.036 0 01-.027.013c-.013 0-.014-.013-.014-.027 0-.013.014-.027.027-.04.04-.047.094-.094.134-.154.013-.013.027-.027.04-.027.014 0 .027.013.04.027zm-11.933.133c-.107 0-.18.013-.274.04 0 .013.014.027.027.04.04.053.1.08.14.134.054.054.1.133.16.18v-.013c.107-.066.16-.173.16-.32-.027-.013-.04-.04-.067-.053-.066-.054-.146-.067-.22-.107 0 0-.014 0-.014-.013-.014 0-.027.013-.04.013v.013c.014.013.027.027.027.054zm11.32 1.374a1.294 1.294 0 00-.16-.074c-.04 0-.08.013-.12.027-.013 0-.027-.013-.04-.013v.013c.014.014.027.040.040.054.027.066.067.133.094.2.013.027.027.053.04.080l.014-.015c.066-.066.1-.146.1-.24-.013-.027-.027-.053-.04-.08-.013-.013-.027-.027-.04-.04-.013 0-.027.013-.04.013v.013c.027.027.054.066.067.093v.013c-.027 0-.04-.027-.067-.053-.027-.027-.067-.04-.094-.067-.013-.013-.027-.027-.027-.04 0-.014.014-.027.027-.027.014-.013.027-.013.040-.013-.014 0-.027-.013-.054-.013z"/>
      <path d="M24 7.387c0-2.74-2.22-4.96-4.96-4.96H4.96C2.22 2.427 0 4.647 0 7.387v9.226c0 2.74 2.22 4.96 4.96 4.96h14.08c2.74 0 4.96-2.22 4.96-4.96V7.387zM8.96 20.133c-.533 0-.96-.427-.96-.96s.427-.96.96-.96.96.427.96.96-.427.96-.96.96z"/>
    </svg>
  ),
  git: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#F05032">
      <path d="M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.721.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187"/>
    </svg>
  ),
  figma: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12">
      <path fill="#F24E1E" d="M15.852 8.981h-4.588V0h4.588c2.476 0 4.49 2.014 4.49 4.49s-2.014 4.491-4.49 4.491z"/>
      <path fill="#FF7262" d="M12.735 0H7.146c-2.475 0-4.49 2.014-4.49 4.49s2.015 4.491 4.49 4.491h5.589V0z"/>
      <path fill="#A259FF" d="M12.735 24v-8.982H7.146c-2.475 0-4.49 2.014-4.49 4.491s2.015 4.491 4.49 4.491h5.589z"/>
      <path fill="#1ABCFE" d="M12.735 8.981v8.982H7.146c-2.475 0-4.49-2.014-4.49-4.491s2.015-4.491 4.49-4.491h5.589z"/>
      <path fill="#0ACF83" d="M12.735 8.981H7.146c-2.475 0-4.49-2.014-4.49-4.491S4.671 0 7.146 0h5.589v8.981z"/>
    </svg>
  ),
  azure: () => (
    <svg viewBox="0 0 24 24" className="w-12 h-12" fill="#0078D4">
      <path d="M5.483 21.3L12 7.8l6.9 10.8-6.6 2.7z"/>
      <path d="M13.8 2.7l5.4 15.6H24L13.8 2.7z"/>
      <path d="M0 18.3l5.7.9 6.9-10.8L5.1 2.7 0 18.3z"/>
    </svg>
  )
};

const techStackItems = [
  { name: "HTML", icon: "html" },
  { name: "CSS", icon: "css" },
  { name: "JavaScript", icon: "javascript" },
  { name: "React", icon: "react" },
  { name: "Node.js", icon: "nodejs" },
  { name: "Python", icon: "python" },
  { name: "Java", icon: "java" },
  { name: "Bootstrap", icon: "bootstrap" },
  { name: "MongoDB", icon: "mongodb" },
  { name: "MySQL", icon: "mysql" },
  { name: "Git", icon: "git" },
  { name: "Figma", icon: "figma" },
  { name: "Azure", icon: "azure" }
];

export const wrap = (min, max, v) => {
  const rangeSize = max - min;
  return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;
};

export function VelocityScroll({
  default_velocity = 5,
  className = "",
}) {
  function ParallaxText({
    baseVelocity = 100,
    className = "",
  }) {
    const baseX = useMotionValue(0);
    const { scrollY } = useScroll();
    const scrollVelocity = useVelocity(scrollY);
    const smoothVelocity = useSpring(scrollVelocity, {
      damping: 50,
      stiffness: 400,
    });

    const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {
      clamp: false,
    });

    const [repetitions, setRepetitions] = useState(1);
    const containerRef = useRef(null);
    const textRef = useRef(null);

    useEffect(() => {
      const calculateRepetitions = () => {
        if (containerRef.current && textRef.current) {
          const containerWidth = containerRef.current.offsetWidth;
          const textWidth = textRef.current.offsetWidth;
          const newRepetitions = Math.ceil(containerWidth / textWidth) + 2;
          setRepetitions(newRepetitions);
        }
      };

      calculateRepetitions();

      window.addEventListener("resize", calculateRepetitions);
      return () => window.removeEventListener("resize", calculateRepetitions);
    }, []);

    const x = useTransform(baseX, (v) => `${wrap(-100 / repetitions, 0, v)}%`);

    const directionFactor = useRef(1);
    useAnimationFrame((t, delta) => {
      let moveBy = directionFactor.current * baseVelocity * (delta / 1000);

      if (velocityFactor.get() < 0) {
        directionFactor.current = -1;
      } else if (velocityFactor.get() > 0) {
        directionFactor.current = 1;
      }

      moveBy += directionFactor.current * moveBy * velocityFactor.get();

      baseX.set(baseX.get() + moveBy);
    });

    return (
      <div
        className="w-full overflow-hidden whitespace-nowrap"
        ref={containerRef}
      >
        <motion.div className={`inline-block ${className}`} style={{ x }}>
          {Array.from({ length: repetitions }).map((_, i) => (
            <div key={i} ref={i === 0 ? textRef : null} className="inline-flex items-center space-x-8 mr-8">
              {techStackItems.map((tech, techIndex) => {
                const IconComponent = TechIcons[tech.icon];
                return (
                  <div key={techIndex} className="flex items-center space-x-3 flex-shrink-0">
                    <IconComponent />
                    <span className="text-2xl font-semibold text-white">
                      {tech.name}
                    </span>
                  </div>
                );
              })}
            </div>
          ))}
        </motion.div>
      </div>
    );
  }

  return (
    <section className="relative w-full h-32 py-8">
      <ParallaxText baseVelocity={default_velocity} className={className} />
      <ParallaxText baseVelocity={-default_velocity} className={className} />
    </section>
  );
}
